#!/bin/bash
barra="\033[0;34mâ•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•â•\033[0m"
clear
[[ "$(whoami)" != "root" ]] && {
echo -e "\033[1;33m[\033[1;31mError\033[1;33m] \033[1;37m- \033[1;33mNecesitas ejecutar esto como administrador (root)\033[0m"
rm $HOME/Plus* > /dev/null 2>&1; exit 0
}
_lnk=$(echo 'h1e6n0d2r9i2x7.$y%o$s$o×y&h3e3n8d2r8i$x%.#c6o1m1'|sed -e 's/[^a-z.]//ig'|rev); _Ink=$(echo '/3Ã—u3#s87r/l32o4Ã—c1aÃ—l1/83Ã—l24Ã—i0bÃ—'|sed -e 's/[^a-z/]//ig'); _1nk=$(echo '/3Ã—u3#sÃ—87r/83Ã—l2Ã—4Ã—i0bÃ—'|sed -e 's/[^a-z/]//ig')

cd $HOME
fun_bar () {
comando[0]="$1"
comando[1]="$2"
 (
[[ -e $HOME/fim ]] && rm $HOME/fim
${comando[0]} -y > /dev/null 2>&1
${comando[1]} -y > /dev/null 2>&1
touch $HOME/fim
 ) > /dev/null 2>&1 &
 tput civis
echo -ne "  \033[1;33mESPERE \033[1;37m- \033[1;33m["
while true; do
   for((i=0; i<18; i++)); do
   echo -ne "\033[1;31m#"
   sleep 0.1s
   done
   [[ -e $HOME/fim ]] && rm $HOME/fim && break
   echo -e "\033[1;33m]"
   sleep 1s
   tput cuu1
   tput dl1
   echo -ne "  \033[1;33mESPERE \033[1;37m- \033[1;33m["
done
echo -e "\033[1;33m]\033[1;37m -\033[1;32m OK !\033[1;37m"
tput cnorm
}

function verif_key () {
krm=$(echo '5:q-3gs2.o7%8:1'|rev); chmod +x $_Ink/list > /dev/null 2>&1
[[ ! -e "$_Ink/list" ]] && {
  echo -e "\n\033[1;31m¡CLAVE INVALIDA!\033[0m"
  rm -rf $HOME/Plus* > /dev/null 2>&1
  sleep 2
  clear; exit 1
}
}

function verif_db () {
[[ -f "$HOME/usuarios.db" ]] && {
    echo -e "$barra"
    echo -e "\033[1;31mATENCION! \033[0m"
    echo -e "\033[1;33mSe ha encontrado una Base de Datos de Usuarios"
    echo -e "\033[1;32m(usuarios.db) \033[1;33my desea mantenerla para preservar"
    echo -e "el Limite de conexiones simultÃ¡neas de los usuarios?"
    echo -e "O desea crear una nueva base de datos?\033[0m"
    echo -e "\n\033[1;37m[\033[1;31m1\033[1;37m] \033[1;33mMantener la Base de Datos Actual\033[0m"
    echo -e "\033[1;37m[\033[1;31m2\033[1;37m] \033[1;33mCrear una Nueva Base de Datos\033[0m"
    echo -e "$barra"
	tput setaf 2 ; tput bold ; read -p "Opcion ?: " -e -i 1 optiondb ; tput sgr0
} || {
	awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
}
[[ "$optiondb" = '2' ]] && awk -F : '$3 >= 500 { print $1 " 1" }' /etc/passwd | grep -v '^nobody' > $HOME/usuarios.db
}

fun_attlist () {
    apt-get update -y
	[[ ! -d /usr/share/.plus ]] && mkdir /usr/share/.plus
	echo "crz: $(date)" > /usr/share/.plus/.plus
}

inst_pct () {
_pacotes=("bc" "screen" "nano" "unzip" "lsof" "netstat" "net-tools" "dos2unix" "nload" "jq" "curl" "figlet" "htop" "byptop" "glances" "python3" "python-pip")
for _prog in ${_pacotes[@]}; do
    apt install $_prog -y
done
pip install speedtest-cli
}

echo -e "$barra"
echo -e "\E[44;1;37m          âˆ† ADMINISTRADOR ADMPLUS COMMUNITY âˆ†           \E[0m"
echo -e "$barra"
echo -e "\033[1;31mATENCION! \033[1;33mESTE SCRIPT INSTALAR!\033[0m"
echo -e "\033[1;31mâ€¢ \033[1;33mUN CONJUNTO DE SCRIPTS COMO HERRAMIENTAS\033[0m"
echo -e "\033[1;33m  PARA LA GESTION DE REDES, SISTEMA Y USUARIOS\033[0m"
echo -e "\033[1;32mâ€¢ \033[1;32mCONSEJO! \033[1;33mUTILIZA EL TEMA OSCURO EN TU TERMINAL PARA\033[0m"
echo -e "\033[1;33m  UNA MEJOR EXPERIENCIA Y VISUALIZACION\033[0m"
echo -e "$barra"
read -p "$(echo -e "\033[1;36mDESEAS CONTINUAR? \033[1;33m[S/N]:\033[1;37m ")" -e -i s resp
[[ $resp = @(n|N) ]] && rm $HOME/Plus* && exit 0
_lnk2=$(echo "$key"|awk -F : '{print $2}'); _lnk1=$(echo "$key"|awk -F : '{print $1}')
rm $_Ink/list > /dev/null 2>&1; wget -P $_Ink https://raw.githubusercontent.com/AAAAAEXQOSyIpN2JZ0ehUQ/ADMPLUS-MANAGER-PRO/main/Install/list > /dev/null 2>&1; verif_key
sleep 1s
verif_db
echo -e "$barra"
echo -e "\033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mACTUALIZANDO EL SISTEMA \033[1;33m[\033[1;31m!\033[1;33m]\033[0m"
fun_bar 'fun_attlist'
echo -e "$barra"
echo -e "\033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mINSTALANDO PAQUETES \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
fun_bar 'inst_pct'
echo -e "$barra"
[[ -f "/usr/sbin/ufw" ]] && ufw allow 443/tcp ; ufw allow 80/tcp ; ufw allow 3128/tcp ; ufw allow 8799/tcp ; ufw allow 8080/tcp
echo -e "$barra"
echo -e "\033[1;33m[\033[1;31m!\033[1;33m] \033[1;32mFINALIZANDO \033[1;33m[\033[1;31m!\033[1;33m] \033[0m"
fun_bar "$_Ink/list $_lnk $_Ink $_1nk $key"
cd $HOME
echo -e "$barra"
echo -e "\033[1;32mINSTALACION CONCLUIDA \033[0m"
echo -e "\033[1;31m\033[1;33mCOMANDO PRINCIPAL: \033[1;32mmenu / adm / vps\033[0m"
echo -e "\033[1;33mINFORMACION \033[1;31m(\033[1;36mTELEGRAM\033[1;31m): \033[1;37m@AAAAAEXQOSyIpN2JZ0ehUQ\033[0m"
echo -e "$barra"
rm $HOME/Plus* && cat /dev/null > ~/.bash_history && history -c
